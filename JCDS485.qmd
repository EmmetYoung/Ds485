---
title: "Ds485"
author: "Emmet"
format: pdf
editor: visual
---

```{r}
library(tidyverse)
library(ggplot2)
library(dplyr)
library(janitor)
install.packages("reshape2")
library(reshape2)
library(plotly)
library(magrittr)
library(tidyr)
library(RColorBrewer)
library(plyr)
library(stringr)
library(Hmisc)
library(qqplotr)
library(olsrr)
library(factoextra)
library(rsample)
library(caret)
library(rattle)
```

```{r}
soccer <- read_csv("KPIs.csv") %>% clean_names()
```

```{r}
soccer <- soccer %>% mutate(formation = as.factor(formation))
```

```{r}
soccer <- soccer %>%
drop_na()
```

```{r}
head(soccer)
```

```{r}
ggplot(soccer, aes(x = attacking_clear_cuts , y = jc_goals)) + 
  geom_point() +
    xlab("Chances") +
  ylab("JC Goals") + 
  theme_bw()
```

```{r}
cor(soccer$attacking_clear_cuts, soccer$jc_goals)
```

```{r}
ggplot(soccer, aes(x = opponent_clear_cuts , y = opponent_goals)) + 
  geom_point() +
    xlab("Chances") +
  ylab("Opponent Goals") + 
  theme_bw()
```

```{r}
cor(soccer$opponent_clear_cuts, soccer$opponent_goals)
```

```{r}
ggplot(soccer, aes(x = opponent_clear_cuts , y = opponent_goals, size = massey_ranking)) + 
  geom_point() +
    xlab("Chances") +
  ylab("Opponent Goals") + 
  theme_bw()
```

```{r}
ggplot(soccer, aes(x = opponent_clear_cuts , y = opponent_goals, shape = formation)) + 
  geom_point() +
    xlab("Chances") +
  ylab("Opponent Goals") + 
  theme_bw()
```

```{r}
ggplot(soccer, aes(x = attacking_clear_cuts , y = jc_goals, shape = formation)) + 
  geom_point() +
    xlab("Chances") +
  ylab("JC Goals") + 
  theme_bw()
```

```{r}
ggplot(soccer, aes(x = first_ball_percentage, y = second_ball_percentage)) + 
  geom_point() +
    xlab("First Ball Won Percentage") +
  ylab("Second Ball Won Percentage") + 
  theme_bw()
```

```{r}
cor(soccer$first_ball_percentage, soccer$second_ball_percentage)
```

```{r}
ggplot(data = soccer) + 
  geom_histogram(mapping = aes(x = jc_goals)) + 
  theme_bw() 
```

```{r}
ggplot(data = soccer) + 
  geom_histogram(mapping = aes(x = opponent_goals)) + 
  theme_bw() 
```

```{r}
ggplot(data = soccer) + 
  geom_histogram(mapping = aes(x = opponent_goals, fill = formation)) + 
  theme_bw() 
```

```{r}
ggplot(data = soccer) + 
  geom_histogram(mapping = aes(x = jc_goals, fill = formation)) + 
  theme_bw() 
```

```{r}
ggplot(soccer, aes(x = wide_attacks_total, y = attacking_clear_cuts)) + 
  geom_point() +
    xlab("Wide Attacks") +
  ylab("CLear Cuts") + 
  theme_bw()
```

```{r}
cor(soccer$wide_attacks_total, soccer$attacking_clear_cuts)
```

```{r}
ggplot(soccer, aes(x = wide_attacks_won, y = attacking_clear_cuts)) + 
  geom_point() +
    xlab("Wide Attacks") +
  ylab("CLear Cuts") + 
  theme_bw()
```

```{r}
cor(soccer$wide_attacks_won, soccer$attacking_clear_cuts)
```

```{r}
ggplot(soccer, aes(x = wide_attacks_percentage, y = attacking_clear_cuts)) + 
  geom_point() +
    xlab("Wide Attacks") +
  ylab("Clear Cuts") + 
  theme_bw()
```

```{r}
cor(soccer$wide_attacks_percentage, soccer$attacking_clear_cuts)
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = opponent_clear_cuts, y = formation)) +
  scale_y_discrete(labels= c("3-5-2", "4-2-3-1")) +
  xlab("Chances Given Up") +
  ylab("Formation") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = attacking_clear_cuts, y = formation)) +
  scale_y_discrete(labels= c("3-5-2", "4-2-3-1")) +
  xlab("Chances Created") +
  ylab("Formation") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = jc_goals, y = formation)) +
  scale_y_discrete(labels= c("3-5-2", "4-2-3-1")) +
  xlab("Goals Scored") +
  ylab("Formation") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = opponent_goals, y = formation)) +
  scale_y_discrete(labels= c("3-5-2", "4-2-3-1")) +
  xlab("Goals Scored") +
  ylab("Formation") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = wide_attacks_total, y = formation)) +
  scale_y_discrete(labels= c("3-5-2", "4-2-3-1")) +
  xlab("Total Wide Attacks") +
  ylab("Formation") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = defensive_wide_attacks_percentage, y = formation)) +
  scale_y_discrete(labels= c("3-5-2", "4-2-3-1")) +
  xlab("Defensive Wide Attack Success Rate") +
  ylab("Formation") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = first_ball_percentage, y = formation)) +
  scale_y_discrete(labels= c("3-5-2", "4-2-3-1")) +
  xlab("First Balls Won Percentage") +
  ylab("Formation") + 
  theme_bw()
```

```{r}
view(soccer)
```

```{r}
ggplot(soccer, aes(x = massey_ranking, y = first_ball_percentage, size = second_ball_percentage)) + 
  geom_point() +
    xlab("Massey Ranking") +
  ylab("First Ball Percentage") + 
  theme_bw()
```

```{r}
ggplot(soccer, aes(x = massey_ranking, y = defensive_wide_attacks_total, size = defensive_wide_attacks_percentage)) + 
  geom_point() +
    xlab("Massey Ranking") +
  ylab("Defensive Wide Attacks Total") + 
  theme_bw()
```

```{r}
soccer$result <- ifelse(soccer$jc_goals > soccer$opponent_goals, "W",
               ifelse(soccer$jc_goals < soccer$opponent_goals, "L", "T"))

view(soccer)
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = attacking_clear_cuts, y = result)) +
  xlab("First Balls Won Percentage") +
  ylab("Result") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = opponent_clear_cuts, y = result)) +
  xlab("Opponent Clear Cuts") +
  ylab("Result") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_boxplot(mapping = aes(x = massey_ranking, y = result)) +
  xlab("Massey Ranking") +
  ylab("Result") + 
  theme_bw()
```

```{r}
ggplot(data = soccer) + 
  geom_bar(mapping = aes(x = result, fill = formation)) + 
  theme_bw() +
  scale_fill_discrete(labels=c("4-2-3-1", "3-5-2")) 
```

```{r}
ggplot(soccer, aes(x = opponent_clear_cuts , y = opponent_goals, color = result)) + 
  geom_point() +
    xlab("Chances") +
  ylab("Opponent Goals") + 
  theme_bw()
```

```{r}
ggplot(soccer, aes(x = attacking_clear_cuts , y = jc_goals, color = result)) + 
  geom_point() +
    xlab("JC Chances") +
  ylab("JC Goals") + 
  theme_bw()
```

```{r}
ggplot(soccer, aes(x = wide_attacks_total , y = wide_attacks_won, color = result)) + 
  geom_point() +
    xlab("Wide Attacks") +
  ylab("Wide Attacks Won") + 
  theme_bw()
```

```{r}
ggplot(soccer, aes(x = defensive_wide_attacks_percentage, y = defensive_wide_attacks_total, color = result)) + 
  geom_point() +
    xlab("Defensive Wide Attacks Percentage") +
  ylab("Defensive Wide Attacks Total") + 
  theme_bw()
```

```{r}
soccer <- mutate(soccer, corner_kicks_percentage = ifelse(corner_kicks_percentage == "#DIV/0!", NA, corner_kicks_percentage))
```

```{r}
soccer <- soccer%>% 
  mutate(corner_kicks_percentage = as.numeric(corner_kicks_percentage))
```

```{r}
# only using the athletes (heat map)
soccer_map <- soccer %>%   select(c(2:36)) #all the numeric variables 

selectedcorr_mat <- round(cor(soccer_map),2)  

melted_corr_mat <- melt(selectedcorr_mat)

melted_corr_mat

```

```{r}

ggplot(data = melted_corr_mat,  aes(x=Var1, y=Var2, fill=value)) +   geom_tile() +  scale_fill_distiller(palette="RdBu",direction=-1,limits=c(-1,1))+ 
geom_text(aes(Var2, Var1, label = value), color = "black", size = 1)+
  #theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5)) +
#theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 4)) +
  scale_y_discrete(label= c(jc_goals = "Juniata Goals", opponent_goals = "Opponent Goals", jc_shots="Juniata Shots", opponent_shots = "Opponent Shots", massey_ranking = "Massey Ranking", won_off_backline="Won Off Backline", opponent_backline_to_frontline = "Opponent Transition", opponent_clear_cuts = "Opponent Clear Cut Chances", backline_to_frontline="Juniata Transition", attacking_clear_cuts = "Juniata Clear Cut Chances", box_touches = "Box Touches", corner_kicks_percentage="Corner Kick Percentage", corner_kicks_total="Total Corner Kicks", corner_kicks_unsuccessful="Unsuccessful Corner Kicks", corner_kicks_successful="Successful Corner Kicks", free_kicks_percentage = "Free Kick Percentage", free_kicks_total = "Total Free Kicks", free_kicks_unsuccessful = "Unsuccessful Free Kicks", free_kicks_successful = "Successful Free Kicks", defensive_wide_attacks_percentage = "Defensive Wide Attacks Percentage", defensive_wide_attacks_total = "Total Defensive Wide Area", defensive_wide_attacks_lost = "Defensive Wide Area Lost", defensive_wide_attacks_won = "Defensive Wide Attacks Won", wide_attacks_percentage = "Wide Attack Percentage", wide_attacks_total = "Total Wide Attacks", wide_attacks_lost = "Wide Attacks Lost", wide_attacks_won = "Wide Attacks Won", second_ball_percentage = "Second Ball Percentage", second_ball_total = "Total Second Balls", second_ball_lost = "Second Balls Lost", second_ball_won = "Second Balls Won", first_ball_percentage = "First Ball Percentage", first_ball_total = "Total First Balls", first_ball_lost = "First Balls Lost", first_ball_won = "First Balls Won")) +
  scale_x_discrete(label= c(jc_goals = "Juniata Goals", opponent_goals = "Opponent Goals", jc_shots="Juniata Shots", opponent_shots = "Opponent Shots", massey_ranking = "Massey Ranking", won_off_backline="Won Off Backline", opponent_backline_to_frontline = "Opponent Transition", opponent_clear_cuts = "Opponent Clear Cut Chances", backline_to_frontline="Juniata Transition", attacking_clear_cuts = "Juniata Clear Cut Chances", box_touches = "Box Touches", corner_kicks_percentage="Corner Kick Percentage", corner_kicks_total="Total Corner Kicks", corner_kicks_unsuccessful="Unsuccessful Corner Kicks", corner_kicks_successful="Successful Corner Kicks", free_kicks_percentage = "Free Kick Percentage", free_kicks_total = "Total Free Kicks", free_kicks_unsuccessful = "Unsuccessful Free Kicks", free_kicks_successful = "Successful Free Kicks", defensive_wide_attacks_percentage = "Defensive Wide Attacks Percentage", defensive_wide_attacks_total = "Total Defensive Wide Area", defensive_wide_attacks_lost = "Defensive Wide Area Lost", defensive_wide_attacks_won = "Defensive Wide Attacks Won", wide_attacks_percentage = "Wide Attack Percentage", wide_attacks_total = "Total Wide Attacks", wide_attacks_lost = "Wide Attacks Lost", wide_attacks_won = "Wide Attacks Won", second_ball_percentage = "Second Ball Percentage", second_ball_total = "Total Second Balls", second_ball_lost = "Second Balls Lost", second_ball_won = "Second Balls Won", first_ball_percentage = "First Ball Percentage", first_ball_total = "Total First Balls", first_ball_lost = "First Balls Lost", first_ball_won = "First Balls Won"))+  labs(x=NULL,y=NULL,fill=stringr::str_wrap("Correlation Coefficient",width=12))+  theme_bw() +  #theme( axis.text.x  = element_text(angle=90)) +
  theme(axis.text = element_text(size = 5),  # Set the size for both x and y axes
        axis.text.x = element_text(angle = 90))
```
